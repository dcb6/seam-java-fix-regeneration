/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seam.api.core;

import java.util.HashMap;
import java.util.Map;
import java.util.Optional;
import java.util.concurrent.TimeUnit;

public final class RequestOptions {
    private final String token;

    private final String seamWorkspace;

    private final String seamClientSessionToken;

    private final String clientSessionToken;

    private final Optional<Integer> timeout;

    private final TimeUnit timeoutTimeUnit;

    private RequestOptions(
            String token,
            String seamWorkspace,
            String seamClientSessionToken,
            String clientSessionToken,
            Optional<Integer> timeout,
            TimeUnit timeoutTimeUnit) {
        this.token = token;
        this.seamWorkspace = seamWorkspace;
        this.seamClientSessionToken = seamClientSessionToken;
        this.clientSessionToken = clientSessionToken;
        this.timeout = timeout;
        this.timeoutTimeUnit = timeoutTimeUnit;
    }

    public Optional<Integer> getTimeout() {
        return timeout;
    }

    public TimeUnit getTimeoutTimeUnit() {
        return timeoutTimeUnit;
    }

    public Map<String, String> getHeaders() {
        Map<String, String> headers = new HashMap<>();
        if (this.token != null) {
            headers.put("Authorization", "Bearer " + this.token);
        }
        if (this.seamWorkspace != null) {
            headers.put("seam-workspace", this.seamWorkspace);
        }
        if (this.seamClientSessionToken != null) {
            headers.put("seam-client-session-token", this.seamClientSessionToken);
        }
        if (this.clientSessionToken != null) {
            headers.put("client-session-token", this.clientSessionToken);
        }
        return headers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static final class Builder {
        private String token = null;

        private String seamWorkspace = null;

        private String seamClientSessionToken = null;

        private String clientSessionToken = null;

        private Optional<Integer> timeout = null;

        private TimeUnit timeoutTimeUnit = TimeUnit.SECONDS;

        public Builder token(String token) {
            this.token = token;
            return this;
        }

        public Builder seamWorkspace(String seamWorkspace) {
            this.seamWorkspace = seamWorkspace;
            return this;
        }

        public Builder seamClientSessionToken(String seamClientSessionToken) {
            this.seamClientSessionToken = seamClientSessionToken;
            return this;
        }

        public Builder clientSessionToken(String clientSessionToken) {
            this.clientSessionToken = clientSessionToken;
            return this;
        }

        public Builder timeout(Integer timeout) {
            this.timeout = Optional.of(timeout);
            return this;
        }

        public Builder timeout(Integer timeout, TimeUnit timeoutTimeUnit) {
            this.timeout = Optional.of(timeout);
            this.timeoutTimeUnit = timeoutTimeUnit;
            return this;
        }

        public RequestOptions build() {
            return new RequestOptions(
                    token, seamWorkspace, seamClientSessionToken, clientSessionToken, timeout, timeoutTimeUnit);
        }
    }
}
